# if no token -> then no validation. only if there is an token, it gets valiated

# specicy values needed to validate a JSON web token  (JWT)
   ## location of the token in request
   ## issueer of the reqeust
   ## JWT key set ( JWKS )

# validates a presented token 
      # if no token --> accept
      # for invalid token -> reject

# principle is set to : request.auth.principal

# when move from one JWT to other
   # --> add the new one, and keep the old one too. old can be removed when all moved to the new JWT.


apiVersion: security.istio.io/v1
kind: RequestAuthentication
metadata:
  name: "jwt-example"
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  jwtRules:                # validate the incoming token againt below rule
  - issuer: "testing@secure.istio.io"
    jwksUri: "https://raw.githubusercontent.com/istio/istio/release-1.18/security/tools/jwt/samples/jwks.json"

---

## copy claims
apiVersion: security.istio.io/v1
kind: RequestAuthentication
metadata:
  name: "jwt-example"
  namespace: foo
spec:
  selector:
    matchLabels:
      app: httpbin
  jwtRules:
  - issuer: "testing@secure.istio.io"
    jwksUri: "https://raw.githubusercontent.com/istio/istio/release-1.24/security/tools/jwt/samples/jwks.json"
    outputClaimToHeaders:
    - header: "x-jwt-claim-foo"
      claim: "foo"              # copy from froo to x-jwt-claim-foo

---
# first the RequestAuthntication is applied. Then 
apiVersion: security.istio.io/v1  #deny if no token
kind: AuthorizationPolicy
metadata:
  name: "frontend-ingress"
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  action: DENY  # deny if there is  no valida token
  rules:
  - from:
    - source:
        notRequestPrincipals: ["*"] #rule is true when there is no request principle


# if no token, then requests to /headers is blocked. No impact on the other paths.
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: "frontend-ingress"
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  action: DENY
  rules:
  - from:
    - source:
        notRequestPrincipals: ["*"]
    to:
    - operation:
        paths: ["/headers"]


# claim based routing
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: httpbin
  namespace: foo
spec:
  hosts:
  - "*"
  gateways:
  - httpbin-gateway
  http:
  - match:
    - uri:
        prefix: /headers
      headers:
        "@request.auth.claims.groups": #dedicated key to route by the claim based headers
          exact: group1
    route:
    - destination:
        port:
          number: 8000
        host: httpbin

